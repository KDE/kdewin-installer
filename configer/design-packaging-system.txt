some notes: 
===========

Do you have considered how to manage dependencies for packages placed on a local directory or a mirror elsewhere ?
------------------------------------------------------------------------------------------------------------------

- support cygwin like directory structure
- support flat directory structures (for sourceforge required)

for main file format specifications see ../doc/format-specifications.txt

the other specifications here will be moved also into the above mentioned location 

Hint files  (proposal)

<package>.hint

--- <package>.hint

sdesc: "short description - displayed in installer"
ldesc: "long description "
category: Web
[requires: <dependency> ....]
#Maintainer: Eric Blake
[build-requires: <dependency> ...]

examples: 

kdewin32-mingw-0.3.0-bin.zip
kdewin32-mingw-0.3.0-lib.zip
kdewin32-mingw-0.3.0-doc.zip
kdewin32-mingw-0.3.0-src.zip
kdewin32.hint

mirror
    dir kdewin32
        kdewin32-mingw-0.3.0-bin.zip
        kdewin32-mingw-0.3.0-lib.zip
        kdewin32-mingw-0.3.0-doc.zip
        kdewin32-mingw-0.3.0-src.zip
        kdewin32.hint | setup.hint
        md5.sum
        
    dir B
        package b-msvc-0.4.1-bin.zip
        package b-msvc-0.4.1-src.zip


This would enable to detect dependencies for packages to be installed from a mirror or a local directory. 
I have currently no working solutions for such dependencies only some ideas.

Christian reported some time ago that the gnuwin32 has an interest to work on such dependency stuff too.

Do you have thought about how dependencies should be managed in general ? 
-------------------------------------------------------------------------

dependencies are a main topic for installing/building (KDE) package on windows 
and there are some more use cases which should be considered.

1. Currently we have archives without a propper package description. 
   The emerge build system has some sort of dependencies in the package 
   configuration files, but they are not distributed along with the package as for example rpm does.

2. To be able to have full dependency support for installers and build systems a 
   separate package descripter file distributed with the archives is required. 
   Placing such informations in the archive requires archive unpackaging to 
   access the package information which is very inperformant. 
   My proposal is to add a 'hint' file to each package as cygwin does with there setup.hint.

An example is shown below:

kdewin32-mingw-0.3.0-src.zip
kdewin32-mingw-0.3.0-bin.zip
kdewin32-mingw-0.3.0-doc.zip
kdewin32-mingw-0.3.0-lib.zip
kdewin32.hint

------- kdewin32.hint << -----------------------------
sdesc: "kde supplementary package for win32"
ldesc: "kdewin32 is a supplementary package with tools/functions/definitions required by kde sources and not available on win32"
category: kdesupport
requires-mingw: qt-mingw
requires-msvc: qt-msvc
requires: libpng zlib
------- >> kdewin32.hint -----------------------------

or a cygwin compatible structure is also possible

directory kdewin32/
    kdewin32-mingw-0.3.0-src.zip
    kdewin32-mingw-0.3.0-bin.zip
    kdewin32-mingw-0.3.0-doc.zip
    kdewin32-mingw-0.3.0-lib.zip
    setup.hint

where setup.hint contains the same text as the kdewin32.hint above.

The emerge build system could fetches the hint file directly for dependencies and other usefull information.

installers could use a publish tool (which is in work) to collect all hint files into a 
central installer config file as we have with the config.txt now.
The Installer will be then available to track dependencies and display detailled package description.

This would help also for cd releases

